// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UnitOfWorkDesignPattern.DataAccessLayer.Concrete;

#nullable disable

namespace UnitOfWorkDesignPattern.DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UnitOfWorkDesignPattern.EntityLayer.Concrete.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerID"));

                    b.Property<decimal>("CustomerBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CustomerBalance = 1000m,
                            CustomerName = "Murat"
                        },
                        new
                        {
                            CustomerID = 2,
                            CustomerBalance = 2000m,
                            CustomerName = "Numan"
                        },
                        new
                        {
                            CustomerID = 3,
                            CustomerBalance = 1500m,
                            CustomerName = "Ayşe"
                        },
                        new
                        {
                            CustomerID = 4,
                            CustomerBalance = 2500m,
                            CustomerName = "Kadir"
                        },
                        new
                        {
                            CustomerID = 5,
                            CustomerBalance = 3000m,
                            CustomerName = "Fatma"
                        });
                });

            modelBuilder.Entity("UnitOfWorkDesignPattern.EntityLayer.Concrete.Process", b =>
                {
                    b.Property<int>("ProcessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProcessID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Receiver")
                        .HasColumnType("integer");

                    b.Property<int>("Sender")
                        .HasColumnType("integer");

                    b.HasKey("ProcessID");

                    b.ToTable("Processes");

                    b.HasData(
                        new
                        {
                            ProcessID = 1,
                            Amount = 500m,
                            Receiver = 2,
                            Sender = 1
                        },
                        new
                        {
                            ProcessID = 2,
                            Amount = 700m,
                            Receiver = 3,
                            Sender = 2
                        },
                        new
                        {
                            ProcessID = 3,
                            Amount = 600m,
                            Receiver = 4,
                            Sender = 3
                        },
                        new
                        {
                            ProcessID = 4,
                            Amount = 900m,
                            Receiver = 5,
                            Sender = 4
                        },
                        new
                        {
                            ProcessID = 5,
                            Amount = 1200m,
                            Receiver = 1,
                            Sender = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
